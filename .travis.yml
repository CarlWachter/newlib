sudo: required
git:
  depth: 3
  submodules: false
env:
  matrix:
  - OS_TYPE=debian OS_VERSION=8 OS_NAME=jessie
  - OS_TYPE=debian OS_VERSION=9 OS_NAME=stretch
  #- OS_TYPE=centos OS_VERSION=latest OS_NAME=centos7
  - OS_TYPE=ubuntu OS_VERSION=16.04 OS_NAME=xenial
  - OS_TYPE=ubuntu OS_VERSION=18.04 OS_NAME=bionic
services:
- docker
addons:
  apt:
    update: true
before_install:
- sudo apt-get -qq update
- sudo docker pull ${OS_TYPE}:${OS_VERSION}
script:
- docker run -ti -v ${TRAVIS_BUILD_DIR}:/work:rw ${OS_TYPE}:${OS_VERSION} /bin/bash -c "cd /work; ./tests.sh ${OS_TYPE} ${OS_VERSION}"
deploy:
  provider: packagecloud
  on:
    branch: bootstrap
    condition: -n "${PACKAGECLOUD_TOKEN}"
  skip_cleanup: true
  dist: "${OS_TYPE}/${OS_NAME}"
  repository: "main"
  username: "hermitcore"
  token: "${PACKAGECLOUD_TOKEN}"
  package_glob: build/*.deb
  #force: true
env:
  global:
    - TOPDIR=/home/travis/build
    - PATH=$PATH:$TOPDIR/x86/bin:/opt/hermit/bin
    - CROSSCOMPREFIX = x86_64-hermit
    - STACKPROT = -fno-stack-protector
    - FC_FOR_TARGET = $CROSSCOMPREFIX-gfortran
    - CC_FOR_TARGET = $CROSSCOMPREFIX-gcc
    - CXX_FOR_TARGET = $CROSSCOMPREFIX-g++
    - GCC_FOR_TARGET = $CROSSCOMPREFIX-gcc
    - CPP_FOR_TARGET = $CROSSCOMPREFIX-cpp
    - AR_FOR_TARGET = $CROSSCOMPREFIX-ar
    - AS_FOR_TARGET = $CROSSCOMPREFIX-as
    - LD_FOR_TARGET = $CROSSCOMPREFIX-ld
    - NM_FOR_TARGET = $CROSSCOMPREFIX-nm
    - OBJDUMP_FOR_TARGET = $CROSSCOMPREFIX-objdump
    - OBJCOPY_FOR_TARGET = $CROSSCOMPREFIX-objcopy
    - RANLIB_FOR_TARGET = $CROSSCOMPREFIX-ranlib
    - STRIP_FOR_TARGET = $CROSSCOMPREFIX-strip
    - READELF_FOR_TARGET = $CROSSCOMPREFIX-readelf
    - ELFEDIT_FOR_TARGET = $CROSSCOMPREFIX-elfedit
    - CFLAGS_FOR_TARGET = -m64 -mtls-direct-seg-refs -O3 -ftree-vectorize #$STACKPROT
    - FCFLAGS_FOR_TARGET = -m64 -mtls-direct-seg-refs -O3 -ftree-vectorize
    - FFLAGS_FOR_TARGET = -m64 -mtls-direct-seg-refs -O3 -ftree-vectorize
    - CXXFLAGS_FOR_TARGET = -m64 -mtls-direct-seg-refs -O3 -ftree-vectorize
